{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/TableCell.js","webpack:///./src/components/TotalProfit.js"],"names":["ProfitCalc","state","initPps","quantity","interest","newPps","handleInput","event","name","_this$setState","this","setState","target","value","render","_this2","_this$state","imv","growth","grossp","netp","Math","abs","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_9__","title","_components_seo__WEBPACK_IMPORTED_MODULE_10__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","columns","relaxed","Column","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","Field","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","onChange","placeholder","icon","_components_TotalProfit__WEBPACK_IMPORTED_MODULE_12__","style","display","justifyContent","alignItems","padding","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","basic","celled","collapsing","Header","Row","HeaderCell","_components_TableCell__WEBPACK_IMPORTED_MODULE_11__","label","dollarSign","percent","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","vertical","React","Component","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_4153862986_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","children","func","siteTitle","menuLinks","page","background","marginBottom","margin","maxWidth","gatsby_link_default","to","color","textDecoration","Menu","stackable","map","link","Item","active","onClick","navigate","Layout","gatsby_browser_entry_StaticQuery","Fragment","header","paddingTop","Date","getFullYear","gatsby_plugin_google_analytics","href","_3436215879","node","TableCell","_this$props","inputsPresent","output","round","isNaN","Body","Cell","as","Content","number","bool","TotalProfit","textAlign"],"mappings":"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","file":"component---src-pages-index-js-238f19f3dfa0b5d92209.js","sourcesContent":["import React from \"react\";\nimport {\n  Segment,\n  Grid,\n  Divider,\n  Input,\n  Form,\n  Table,\n  Header,\n} from \"semantic-ui-react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport TableCell from \"../components/TableCell\";\nimport TotalProfit from \"../components/TotalProfit\";\n\n//css\nimport \"semantic-ui-css/semantic.min.css\";\n\nexport default class ProfitCalc extends React.Component {\n  state = {\n    initPps: null,\n    quantity: null,\n    interest: null,\n    newPps: null,\n  };\n\n  handleInput(event, name) {\n    this.setState({ [name]: event.target.value });\n  }\n\n  render() {\n    const { initPps, quantity, newPps } = this.state;\n    //interest to percentage\n    const interest = this.state.interest / 100;\n\n    //output calculations\n    const imv = initPps * quantity;\n    const growth = (newPps - initPps) / initPps;\n    const grossp = newPps * quantity - initPps * quantity;\n    const netp = grossp - Math.abs(grossp * interest);\n\n    return (\n      <Layout title=\"profit-calc\">\n        <SEO title=\"Profit Calculator\" />\n        <Segment>\n          <Grid columns={2} relaxed=\"very\">\n            <Grid.Column>\n              <Form>\n                <h1>Profit Calculator</h1>\n\n                <p>Enter Stock Information Below:</p>\n\n                <Form.Field>\n                  <label>Stock Price:</label>\n                  <Input\n                    value={this.state.initPps}\n                    onChange={event => this.handleInput(event, \"initPps\")}\n                    placeholder=\"Price Per Share\"\n                    icon=\"dollar sign\"\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Quantity:</label>\n                  <Input\n                    value={this.state.quantity}\n                    onChange={event => this.handleInput(event, \"quantity\")}\n                    placeholder=\"Quantity of Shares\"\n                    icon=\"sort amount up\"\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Interest or Comission:</label>\n                  <Input\n                    value={this.state.interest}\n                    onChange={event => this.handleInput(event, \"interest\")}\n                    placeholder=\"Interest or Comission\"\n                    icon=\"percent\"\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>New Stock Price: </label>\n                  <Input\n                    value={this.state.newPps}\n                    onChange={event => this.handleInput(event, \"newPps\")}\n                    placeholder=\"New PPS\"\n                    icon=\"dollar sign\"\n                  />\n                </Form.Field>\n              </Form>\n            </Grid.Column>\n            <Grid.Column>\n              <TotalProfit netp={netp} />\n\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  padding: \"10px\",\n                }}\n              >\n                <Table basic=\"very\" celled collapsing>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell />\n                      <Table.HeaderCell>Value</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <TableCell\n                    label=\"Initial Market Value of Position\"\n                    value={imv}\n                    dollarSign\n                  />\n                  <TableCell label=\"Growth\" value={growth * 100} percent />\n                  <TableCell label=\"Gross Profit\" value={grossp} dollarSign />\n                  <TableCell\n                    label=\"Net Profit After Interest / Commision\"\n                    value={netp}\n                    dollarSign\n                  />\n                </Table>\n              </div>\n            </Grid.Column>\n          </Grid>\n\n          <Divider vertical>yields</Divider>\n        </Segment>\n      </Layout>\n    );\n  }\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            #author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        // {\n        //   name: `twitter:card`,\n        //   content: `summary`,\n        // },\n        // {\n        //   name: `twitter:creator`,\n        //   content: site.siteMetadata.author,\n        // },\n        // {\n        //   name: `twitter:title`,\n        //   content: title,\n        // },\n        // {\n        //   name: `twitter:description`,\n        //   content: metaDescription,\n        // },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { navigate, Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Menu } from \"semantic-ui-react\";\n\nconst Header = ({ siteTitle, menuLinks, page }) => (\n  <header\n    style={{\n      background: `#2E3440`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `1.45rem 1.0875rem`,\n        }}\n      >\n        <h1 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `white`,\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n      </div>\n\n      <Menu stackable>\n        {menuLinks.map(link => (\n          <Menu.Item\n            active={\"/\" + page === link.link}\n            onClick={() => navigate(link.link)}\n          >\n            {link.name}\n          </Menu.Item>\n        ))}\n      </Menu>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ children, title }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            menuLinks {\n              name\n              link\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <React.Fragment>\n        <Header\n          menuLinks={data.site.siteMetadata.menuLinks}\n          siteTitle={data.site.siteMetadata.title}\n          page={title}\n        />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with ♥ by\n            {` `}\n            <OutboundLink href=\"https://www.linkedin.com/in/kevin-mckigney-b59481160/\">\n              Kevin McKigney,\n            </OutboundLink>\n            {`  `}\n            <OutboundLink href=\"http://linkedin.com/in/zosman1/\">Zach Osman</OutboundLink>\n            {`  and  `}\n            <OutboundLink href=\"https://www.linkedin.com/in/chrisae9/\">Chris Alves</OutboundLink>\n          </footer>\n        </div>\n      </React.Fragment>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table, Header } from \"semantic-ui-react\";\n\nclass TableCell extends React.Component {\n  render() {\n    const { value, label, percent, dollarSign, inputsPresent } = this.props;\n\n    let output = Math.abs(Math.round(value * 100) / 100);\n    if (isNaN(value) || !inputsPresent) {\n      output = 0;\n    }\n    return (\n      <Table.Body>\n        <Table.Row>\n          <Table.Cell>\n            <Header as=\"h4\">\n              <Header.Content>{label}</Header.Content>\n            </Header>\n          </Table.Cell>\n          <Table.Cell>\n            {inputsPresent && value < 0 && \"-\"}\n            {dollarSign && \"$\"}\n            {output}\n            {percent && \"%\"}\n          </Table.Cell>\n        </Table.Row>\n      </Table.Body>\n    );\n  }\n}\n\nTableCell.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  inputsPresent: PropTypes.bool.isRequired,\n  percent: PropTypes.bool,\n  dollarSign: PropTypes.bool,\n};\nexport default TableCell;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header } from \"semantic-ui-react\";\n\nexport default class TotalProfit extends React.Component {\n  render() {\n    const netp = isNaN(this.props.netp) ? 0 : this.props.netp;\n    let color = \"black\";\n    if (netp > 0) color = \"green\";\n    if (netp < 0) color = \"red\";\n    return (\n      <Header as=\"h1\" icon textAlign=\"center\">\n        <Header.Content>Total Profit</Header.Content>\n        <Header color={color}>\n          {netp < 0 && \"-\"}${Math.abs(Math.round(netp * 100) / 100)}\n        </Header>\n      </Header>\n    );\n  }\n}\n\nTotalProfit.propTypes = {\n  netp: PropTypes.number.isRequired,\n};\n"],"sourceRoot":""}